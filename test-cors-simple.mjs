#!/usr/bin/env node

import fetch from 'node-fetch';

const API_BASE_URL = 'https://competitive-camellia-latar-a11ca532.koyeb.app';

async function testCORS() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
    
    try {
        // –¢–µ—Å—Ç 1: Health check
        console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º health check...');
        const healthResponse = await fetch(`${API_BASE_URL}/healthz`, {
            method: 'GET',
            headers: {
                'Origin': 'https://acqu1red.github.io',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'
            }
        });
        
        console.log('üì• Health check —Å—Ç–∞—Ç—É—Å:', healthResponse.status);
        console.log('üì• CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:');
        console.log('  - Access-Control-Allow-Origin:', healthResponse.headers.get('access-control-allow-origin'));
        console.log('  - Access-Control-Allow-Credentials:', healthResponse.headers.get('access-control-allow-credentials'));
        
        if (healthResponse.ok) {
            const data = await healthResponse.json();
            console.log('‚úÖ Health check —É—Å–ø–µ—à–µ–Ω:', data);
        } else {
            console.log('‚ùå Health check –Ω–µ—É–¥–∞—á–µ–Ω');
        }
        
        // –¢–µ—Å—Ç 2: Preflight –∑–∞–ø—Ä–æ—Å
        console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º preflight –∑–∞–ø—Ä–æ—Å...');
        const preflightResponse = await fetch(`${API_BASE_URL}/api/generate-photo`, {
            method: 'OPTIONS',
            headers: {
                'Origin': 'https://acqu1red.github.io',
                'Access-Control-Request-Method': 'POST',
                'Access-Control-Request-Headers': 'Content-Type',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'
            }
        });
        
        console.log('üì• Preflight —Å—Ç–∞—Ç—É—Å:', preflightResponse.status);
        console.log('üì• CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:');
        console.log('  - Access-Control-Allow-Origin:', preflightResponse.headers.get('access-control-allow-origin'));
        console.log('  - Access-Control-Allow-Methods:', preflightResponse.headers.get('access-control-allow-methods'));
        console.log('  - Access-Control-Allow-Headers:', preflightResponse.headers.get('access-control-allow-headers'));
        console.log('  - Access-Control-Allow-Credentials:', preflightResponse.headers.get('access-control-allow-credentials'));
        
        if (preflightResponse.status === 200) {
            console.log('‚úÖ Preflight –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω');
        } else {
            console.log('‚ùå Preflight –∑–∞–ø—Ä–æ—Å –Ω–µ—É–¥–∞—á–µ–Ω');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CORS:', error.message);
    }
}

testCORS();
