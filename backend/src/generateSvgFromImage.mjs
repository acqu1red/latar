import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { analyzeImageWithGPT, convertImageToSvgDirect } from './gptVisionAnalyzer.mjs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export async function generateSvgFromImage(imagePath, baseUrl = 'http://localhost:3001') {
  try {
    // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ–±–µ–ª–∏
    const furnitureData = JSON.parse(
      fs.readFileSync(path.join(__dirname, '..', 'furniture.json'), 'utf8')
    );

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ SVG –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ SVG –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏');
    const svgContent = await convertImageToSvgDirect(imagePath, furnitureData, baseUrl);
    
    return svgContent;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG:', error);
    throw error;
  }
}

