import fs from 'fs';
import sharp from 'sharp';

/**
 * –õ–æ–∫–∞–ª—å–Ω–∞—è Stable Diffusion –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
 * –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */
export const localStableDiffusion = {
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–π Stable Diffusion
   * @returns {boolean} –î–æ—Å—Ç—É–ø–Ω–∞ –ª–∏
   */
  get isAvailable() {
    // –ü–æ–∫–∞ —á—Ç–æ –≤—Å–µ–≥–¥–∞ false, —Ç–∞–∫ –∫–∞–∫ –ª–æ–∫–∞–ª—å–Ω–∞—è SD –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
    return false;
  },

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–Ω —Å –ø–æ–º–æ—â—å—é –ª–æ–∫–∞–ª—å–Ω–æ–π Stable Diffusion
   * @param {string} sketchPath - –ü—É—Ç—å –∫ —ç—Å–∫–∏–∑—É
   * @param {string} prompt - –ü—Ä–æ–º–ø—Ç
   * @returns {Promise<Buffer>} –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   */
  async generatePlan(sketchPath, prompt) {
    console.log('üöÄ –õ–æ–∫–∞–ª—å–Ω–∞—è Stable Diffusion –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
    throw new Error('Local Stable Diffusion not available');
  }
};