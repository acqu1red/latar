import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
// import { authService } from '../lib/supabase';
import './LoginPage.css';

const LoginPage: React.FC = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setError(null);
    setIsLoading(true);

    try {
      // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      if (username === 'admin' && password === 'password') {
        console.log('Login successful');
        navigate('/dashboard');
      } else {
        setError('–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
      }
    } catch (err) {
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
      console.error(err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="login-page">
      {/* Background Animation */}
      <div className="background-animation">
        <div className="gradient-orb orb-1"></div>
        <div className="gradient-orb orb-2"></div>
        <div className="floating-shapes">
          <div className="shape shape-1"></div>
          <div className="shape shape-2"></div>
          <div className="shape shape-3"></div>
        </div>
      </div>

      <div className="login-container">
        <div className="login-header">
          <div className="login-icon">
            <div className="icon-glow"></div>
            üîê
          </div>
          <h2 className="login-title">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ</h2>
          <p className="login-subtitle">–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</p>
        </div>

        <form onSubmit={handleLogin} className="login-form">
          <div className="input-group">
            <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
            <div className="input-wrapper">
              <input
                type="text"
                id="username"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                required
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                className="form-input"
              />
              <div className="input-glow"></div>
            </div>
          </div>

          <div className="input-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
            <div className="input-wrapper">
              <input
                type="password"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                className="form-input"
              />
              <div className="input-glow"></div>
            </div>
          </div>

          {error && (
            <div className="error-message">
              <span className="error-icon">‚ö†Ô∏è</span>
              <span className="error-text">{error}</span>
            </div>
          )}

          <button type="submit" className="login-button" disabled={isLoading}>
            <span className="button-text">
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </span>
            <div className="button-glow"></div>
            <div className="button-ripple"></div>
          </button>
        </form>

        <div className="login-footer">
          <p className="register-link">
            –ï—â—ë –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link to="/register" className="link">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
          </p>
          <Link to="/" className="back-link">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;
