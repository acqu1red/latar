import { createEnhancedSketch, generateLocalImage } from './backend/src/localImageGenerator.mjs';
import { createSketchFromImage, generatePhotoFromSketch } from './backend/src/scribbleDiffusionGenerator.mjs';
import fs from 'fs';
import sharp from 'sharp';

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function testLocalGeneration() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const testImagePath = await createTestImage();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', testImagePath);
    
    // –°–æ–∑–¥–∞–µ–º —ç—Å–∫–∏–∑
    const sketchPath = await createSketchFromImage(testImagePath);
    console.log('‚úÖ –≠—Å–∫–∏–∑ —Å–æ–∑–¥–∞–Ω:', sketchPath);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    const prompts = [
      'a modern living room with large windows and natural lighting',
      'a beautiful sunset over the ocean',
      'a cozy forest cabin in the woods',
      'a minimalist bedroom with clean lines'
    ];
    
    for (let i = 0; i < prompts.length; i++) {
      const prompt = prompts[i];
      console.log(`\nüé® –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç ${i + 1}: "${prompt}"`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const imageBuffer = await generateLocalImage(sketchPath, prompt);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const outputPath = `test-local-output-${i + 1}.png`;
      fs.writeFileSync(outputPath, imageBuffer);
      console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputPath}`);
    }
    
    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    fs.unlinkSync(testImagePath);
    fs.unlinkSync(sketchPath);
    
    console.log('\nüéâ –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
 */
async function createTestImage() {
  const outputPath = 'test-image-local.png';
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–º
  await sharp({
    create: {
      width: 400,
      height: 300,
      channels: 3,
      background: { r: 255, g: 255, b: 255 }
    }
  })
  .composite([
    {
      input: Buffer.from(`
        <svg width="400" height="300">
          <rect x="50" y="50" width="300" height="200" 
                fill="none" stroke="black" stroke-width="3"/>
          <rect x="100" y="100" width="200" height="100" 
                fill="lightblue" stroke="black" stroke-width="2"/>
          <circle cx="200" cy="150" r="30" 
                  fill="yellow" stroke="black" stroke-width="2"/>
          <line x1="150" y1="120" x2="250" y2="180" 
                stroke="red" stroke-width="2"/>
        </svg>
      `),
      top: 0,
      left: 0
    }
  ])
  .png()
  .toFile(outputPath);
  
  return outputPath;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testLocalGeneration();
